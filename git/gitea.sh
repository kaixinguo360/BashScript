#!/bin/bash
export PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

# 检查是否为Root
[ $(id -u) != "0" ] && { echo "Error: You must be root to run this script"; exit 1; }

# 检查系统信息
if [ ! -z "`cat /etc/issue | grep 'Ubuntu 16'`" ];
    then
        OS='Ubuntu'
    else
        echo "Not support OS(Ubuntu 16), Please reinstall OS and retry!"
        #exit 1
fi

## 初始化安装参数 ##

# 设置静态变量
NEW_SITE_URL='https://raw.githubusercontent.com/kaixinguo360/ShellScript/master/other/new_site.sh'
GITEA_URL='https://dl.gitea.io/gitea/1.4.2/gitea-1.4.2-linux-amd64'
GIT_INIT_URL='https://raw.githubusercontent.com/kaixinguo360/ShellScript/master/git/init/gitea'
GIT_SYSTEMD_URL='https://raw.githubusercontent.com/kaixinguo360/ShellScript/master/git/systemd/gitea.service'
NGINX_CONF='/etc/nginx/sites-enabled/'

# 读取用户输入
read -p '您的网站域名: ' SERVER_NAME

while true :
do
	read -r -p "使用 acme.sh/自签名/系统自带snakeoil 证书? [Y/s/n] " input
	case $input in
	    [yY][eE][sS]|[yY])
	                SSL_TYPE="y"
			break
            		;;

	    [sS][eE][lL][fF]|[sS])
	                SSL_TYPE="s"
            		break
            		;;

	    [nN][oO]|[nN])
	                SSL_TYPE="n"
            		break
            		;;

	    *)
		echo "Invalid input..."
		;;
	esac
done

read -p '请输入要使用的用户名(如果不存在则自动创建): ' GIT_USER
while true :
do
    read -s -p "请输入用户 ${GIT_USER} 的密码: " GIT_PASSWORD_1
    echo ''
    read -s -p '再输一遍: ' GIT_PASSWORD_2
    echo ''
    if [ "${GIT_PASSWORD_1}" = "${GIT_PASSWORD_2}" ]; then
        GIT_PW=${GIT_PASSWORD_1}
        break
    else
        echo -e "两次输入密码不一致!\n"
    fi
done

GITEA_ROOT="/home/${GIT_USER}/gitea/"



## 正式安装开始 ##


############
# 用户 配置 #
############

# 如果指定用户不存在, 则创建此用户
HAS_GIT_USER=`cat /etc/passwd|grep -v nologin|grep -v halt|grep -v shutdown|awk -F":" '{ print $1 }' | grep ${GIT_USER}`
if [ ! -n "${HAS_GIT_USER}" ];then
    useradd -m -d /home/${GIT_USER}/gitea-gitea-repositories -s /usr/bin/git-shell ${GIT_USER}
    echo $GIT_USER:$GIT_PW|chpasswd
    if [ $? -eq 0 ]; then
        echo "User '$GIT_USER' has been added to system!"
    else
        echo "Failed to add a user '$GIT_USER' !"
    fi
fi


##############
# Gitea 配置 #
##############

# 创建Gitea根目录
mkdir -p ${GITEA_ROOT}

# 下载安装Gitea
wget -O ${GITEA_ROOT}gitea ${GITEA_URL} -q
chmod +x ${GITEA_ROOT}gitea

# 修改文件所有权
chown git:git -R ${GITEA_ROOT}

# 创建init.d配置
wget $GIT_INIT_URL -O /etc/init.d/gitea -q
sed "s#/home/git/gitea#/home/${GIT_USER}/gitea#g" /etc/init.d/gitea -i
sed "s#User=git#User=${GIT_USER}#g" /etc/init.d/gitea -i
sed "s#Group=git#Group=${GIT_USER}#g" /etc/init.d/gitea -i
chmod +x /etc/init.d/gitea

# 创建systemd配置
wget $GIT_SYSTEMD_URL -O /lib/systemd/system/gitea.service -q
sed "s#WORKINGDIR=/home/git/gitea#WORKINGDIR=/home/${GIT_USER}/gitea#g" /etc/init.d/gitea -i
sed "s#USER=git#USER=${GIT_USER}#g" /etc/init.d/gitea -i
chmod +x /lib/systemd/system/gitea.service
systemctl daemon-reload


##############
# Nginx 配置 #
##############

# 运行new_site.sh
wget -O new_site.sh ${NEW_SITE_URL} -q
chmod +x new_site.sh
./new_site.sh -n ${SERVER_NAME} -c git -r ./tmp_git -s ${SSL_TYPE} --no-restart

# 删除无用临时文件
rm -rf new_site.sh
rm -rf tmp_git

# 写入新的配置文件
cat > /etc/nginx/sites-enabled/git << HERE
server {
        listen 80;
        listen [::]:80;

        # SSL configuration
        #
        #listen 443 ssl;
        #listen [::]:443 ssl;
        #
        # Note: You should disable gzip for SSL traffic.
        # See: https://bugs.debian.org/773332
        #
        # Read up on ssl_ciphers to ensure a secure configuration.
        # See: https://bugs.debian.org/765782
        #
        # Self signed certs generated by the ssl-cert package
        # Don't use them in a production server!
        #
        include my/git/*.conf;

        server_name ${SERVER_NAME};

        location / {
                proxy_pass http://127.0.0.1:3000/;
        }
}

include my/git/*.ser;
HERE

if [[ "${SSL_TYPE}" != "n" ]]; then
sed "s/listen 80/#listen 80/g" /etc/nginx/sites-enabled/git -i
sed "s/listen \[::\]:80/#listen \[::\]:80/g" /etc/nginx/sites-enabled/git -i
fi

# 重启Nginx
service nginx restart

